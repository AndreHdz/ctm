// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id Int @id @default(autoincrement())
  name String?
  status String?
  image String?
  password String?
  born_place String?
  street String
  colony String
  city String
  phone String
  age String
  gender String
  birthdate DateTime?
  register_date DateTime?
  updated_at DateTime @updatedAt
  key String
  working_company String
  emp_status String
  daily_salary String
  voter_code String
  curp String
  rfc String
  cci_type String
  syndicate String
  accounts Account[]
}

model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

enum status{
  ACTIVE
  INACTIVE
  PENSIONADO
}


enum Role{
  USER
  ADMIN
}